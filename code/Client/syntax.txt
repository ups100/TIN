Syntax of the commands, that I rely on while writing Command Parser. If it doesn't match what we expect our program to do, let me know. 
Specific words are up to us, it can be change in CommandParser constructor whether we want to invoke removing file by typing "rm" or "remove". I tried to accomplish all recommendations, but I barely doubt, that everything is all right.
I created couple of commands based on linux shell commands. It includes:

log <alias> <password>
Client logs on specific alias (don't know, if this is ok, just typing the password)

create <alias> <password>
Obvious

add <localpath>
Assuming client has logged succesfully, just types path to directory that he/she wants to add to alias

rm -a <alias> <password>
Deleting the alias (user need to write password to verify, is he/she is allowed to do that)

rm -l <localpath>
Deleting catalog/file from local directory (but under alias).

rm -r <file> 
Deleting file from alias

find <file>
User invokes that, when he/she wants to file certain file under the alias he/she is logged on

read <file>
Usually after previous command, user wants to read some file

synch -o
Synchronization with overwriting, when file on disk is older

synch -d
Synchronization, with interaction with user, anywhere there is a need to decide which file he/she would like to get

ls
As in Linux shell, list all files gathered under the alias

push 
//Not yet

pull
//not yet


Things like not enough or too many parameters/arguments are cleared by CommandParser (simply accept only correct commands, returning NULL otherwise). Class Commands contains getters to each of the part of command (command itself, parameter and arguments) 

